{"version":3,"sources":["node_modules/browser-pack/_prelude.js","lib/base64.js","lib/error.js","lib/fingerprint.js","lib/index.js","lib/request.js","lib/source.js","lib/storage.js","lib/upload.js","node_modules/extend/index.js","node_modules/punycode/punycode.js","node_modules/querystring-es3/decode.js","node_modules/querystring-es3/encode.js","node_modules/querystring-es3/index.js","node_modules/url/url.js","node_modules/url/util.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","tus","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_dereq_","encode","btoa","data","unescape","encodeURIComponent","isSupported","DetailedError","error","causingErr","arguments","undefined","xhr","_classCallCheck","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","message","originalRequest","causingError","toString","status","responseText","fingerprint","file","name","type","size","lastModified","join","_upload","_storage","defaultOptions","_window","XMLHttpRequest","Blob","prototype","slice","Upload","_upload2","default","canStoreURLs","newRequest","resolveUrl","_url","origin","link","path","_url2","parse","replace","getSource","FileSource","_file","start","end","input","setItem","getItem","removeItem","hasStorage","key","localStorage","SECURITY_ERR","QUOTA_EXCEEDED_ERR","value","_fingerprint","_error","_extend","_request","_source","_base","Base64","Storage","endpoint","wsendpoint","_fingerprint2","resume","onProgress","onChunkComplete","onSuccess","onError","onCancelSuccess","onCancelError","headers","chunkSize","Infinity","withCredentials","uploadUrl","uploadSize","overridePatchMethod","retryDelays","options","_extend2","url","_xhr","_offset","_aborted","_size","_retryAttempt","_retryTimeout","_offsetBeforeRetry","_emitError","source","isNaN","errorCallback","err","shouldResetDelays","isOnline","navigator","onLine","shouldRetry","inStatusCategory","delay","setTimeout","_resumeUpload","resumedUrl","_createUpload","abort","close","clearTimeout","_this2","onabort","_cancelUpload","_this3","open","onload","_emitCancelSuccess","onerror","_emitXhrCancelError","_setupXHR","send","_emitCancelError","_error2","bytesSent","bytesTotal","bytesAccepted","setRequestHeader","_this4","ws","WebSocket","onopen","payload","method","Tus-Resumable","Upload-Length","metadata","encodeMetadata","optionHeaders","JSON","stringify","event","console","log","onclose","onmessage","response","_startUpload","_this5","_emitXhrError","offset","parseInt","getResponseHeader","_emitProgress","_emitSuccess","_this6","_emitChunkComplete","upload","onprogress","lengthComputable","loaded","encoded","push","category","hasOwn","hasOwnProperty","toStr","isArray","arr","Array","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","constructor","extend","src","copy","copyIsArray","clone","target","deep","root","freeExports","nodeType","freeModule","freeGlobal","punycode","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","overflow","not-basic","invalid-input","baseMinusTMin","floor","Math","stringFromCharCode","String","fromCharCode","RangeError","map","array","fn","result","mapDomain","string","parts","split","labels","ucs2decode","output","counter","extra","charCodeAt","ucs2encode","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","k","decode","inputLength","out","bias","basic","j","index","oldi","w","baseMinusT","lastIndexOf","splice","handledCPCount","basicLength","m","q","currentValue","handledCPCountPlusOne","qMinusT","toUnicode","test","toLowerCase","toASCII","version","ucs2","prop","qs","sep","eq","regexp","maxKeys","len","x","idx","indexOf","kstr","vstr","v","substr","decodeURIComponent","xs","stringifyPrimitive","isFinite","objectKeys","ks","res","keys","util","urlParse","resolve","urlResolve","resolveObject","urlResolveObject","format","urlFormat","Url","protocol","slashes","auth","host","port","hostname","hash","search","query","pathname","href","protocolPattern","portPattern","simplePathPattern","delims","unwise","concat","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","javascript:","hostlessProtocol","slashedProtocol","http","https","ftp","gopher","http:","https:","ftp:","gopher:","file:","querystring","parseQueryString","slashesDenoteHost","isObject","isString","TypeError","queryIndex","splitter","uSplit","slashRegex","rest","trim","simplePath","exec","proto","lowerProto","match","hostEnd","hec","atSign","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","unshift","p","h","ae","esc","escape","qm","charAt","relative","rel","tkeys","tk","tkey","rkeys","rk","rkey","relPath","shift","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","pop","isNullOrUndefined","authInHost","isNull","last","hasTrailingSlash","up","isAbsolute","arg"],"mappings":"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","file":"./dist/tus.min.js","sourceRoot":"","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* global: window */\n\nconst {btoa} = window;\n\nexport function encode(data) {\n  return btoa(unescape(encodeURIComponent(data)));\n}\n\nexport const isSupported = \"btoa\" in window;\n","class DetailedError extends Error {\n  constructor(error, causingErr = null, xhr = null) {\n    super(error.message);\n\n    this.originalRequest = xhr;\n    this.causingError = causingErr;\n\n    let message = error.message;\n    if (causingErr != null) {\n      message += `, caused by ${causingErr.toString()}`;\n    }\n    if (xhr != null) {\n      message += `, originated from request (response code: ${xhr.status}, response text: ${xhr.responseText})`;\n    }\n    this.message = message;\n  }\n}\n\nexport default DetailedError;\n","/**\n * Generate a fingerprint for a file which will be used the store the endpoint\n *\n * @param {File} file\n * @return {String}\n */\nexport default function fingerprint(file) {\n  return [\n\t\t\"tus\",\n\t\tfile.name,\n\t\tfile.type,\n\t\tfile.size,\n\t\tfile.lastModified\n  ].join(\"-\");\n}\n","/* global window */\nimport Upload from \"./upload\";\nimport {canStoreURLs} from \"./storage\";\n\nconst {defaultOptions} = Upload;\n\nif (typeof window !== \"undefined\") {\n  // Browser environment using XMLHttpRequest\n  const {XMLHttpRequest, Blob} = window;\n\n  var isSupported = (\n    XMLHttpRequest &&\n    Blob &&\n    typeof Blob.prototype.slice === \"function\"\n  );\n} else {\n  // Node.js environment using http module\n  var isSupported = true;\n}\n\n// The usage of the commonjs exporting syntax instead of the new ECMAScript\n// one is actually inteded and prevents weird behaviour if we are trying to\n// import this module in another module using Babel.\nmodule.exports = {\n  Upload,\n  isSupported,\n  canStoreURLs,\n  defaultOptions\n};\n","/* global window */\nimport url from \"url\";\n\nexport function newRequest() {\n  return new window.XMLHttpRequest();\n}\n\nexport function resolveUrl(origin, link) {\n  let path = url.parse(origin).path;\n  // console.log(path);\n  return \"http://\"+origin.replace(path, \"\") + link;\n}\n","class FileSource {\n  constructor(file) {\n    this._file = file;\n    this.size = file.size;\n  }\n\n  slice(start, end) {\n    return this._file.slice(start, end);\n  }\n\n  close() {}\n}\n\nexport function getSource(input) {\n  // Since we emulate the Blob type in our tests (not all target browsers\n  // support it), we cannot use `instanceof` for testing whether the input value\n  // can be handled. Instead, we simply check is the slice() function and the\n  // size property are available.\n  if (typeof input.slice === \"function\" && typeof input.size !== \"undefined\") {\n    return new FileSource(input);\n  }\n\n  throw new Error(\"source object may only be an instance of File or Blob in this environment\");\n}\n","/* global window, localStorage */\n\nlet hasStorage = false;\ntry {\n  hasStorage = \"localStorage\" in window;\n\n  // Attempt to store and read entries from the local storage to detect Private\n  // Mode on Safari on iOS (see #49)\n  var key = \"tusSupport\";\n  localStorage.setItem(key, localStorage.getItem(key));\n\n} catch (e) {\n  // If we try to access localStorage inside a sandboxed iframe, a SecurityError\n  // is thrown. When in private mode on iOS Safari, a QuotaExceededError is\n  // thrown (see #49)\n  if (e.code === e.SECURITY_ERR || e.code === e.QUOTA_EXCEEDED_ERR) {\n    hasStorage = false;\n  } else {\n    throw e;\n  }\n}\n\nexport const canStoreURLs = hasStorage;\n\nexport function setItem(key, value) {\n  if (!hasStorage) return;\n  return localStorage.setItem(key, value);\n}\n\nexport function getItem(key) {\n  if (!hasStorage) return;\n  return localStorage.getItem(key);\n}\n\nexport function removeItem(key) {\n  if (!hasStorage) return;\n  return localStorage.removeItem(key);\n}\n","/* global window */\nimport fingerprint from \"./fingerprint\";\nimport DetailedError from \"./error\";\nimport extend from \"extend\";\n\n// We import the files used inside the Node environment which are rewritten\n// for browsers using the rules defined in the package.json\nimport {newRequest} from \"./request\";\nimport {getSource} from \"./source\";\nimport * as Base64 from \"./base64\";\nimport * as Storage from \"./storage\";\n\nconst defaultOptions = {\n  endpoint: \"http://localhost:8080\",\n  wsendpoint: \"localhost:8084\",\n  fingerprint,\n  resume: true,\n  onProgress: null,\n  onChunkComplete: null,\n  onSuccess: null,\n  onError: null,\n  onCancelSuccess: null,\n  onCancelError: null,\n  headers: {},\n  chunkSize: Infinity,\n  withCredentials: false,\n  uploadUrl: null,\n  uploadSize: null,\n  overridePatchMethod: false,\n  retryDelays: null\n};\n\nclass Upload {\n  constructor(file, options) {\n    this.options = extend(true, {}, defaultOptions, options);\n\n    // The underlying File/Blob object\n    this.file = file;\n\n    // The URL against which the file will be uploaded\n    this.url = null;\n\n    // The underlying XHR object for the current PATCH request\n    this._xhr = null;\n\n    // The fingerpinrt for the current file (set after start())\n    this._fingerprint = null;\n\n    // The offset used in the current PATCH request\n    this._offset = null;\n\n    // True if the current PATCH request has been aborted\n    this._aborted = false;\n\n    // The file's size in bytes\n    this._size = null;\n\n    // The Source object which will wrap around the given file and provides us\n    // with a unified interface for getting its size and slice chunks from its\n    // content allowing us to easily handle Files, Blobs, Buffers and Streams.\n    this._source = null;\n\n    // The current count of attempts which have been made. Null indicates none.\n    this._retryAttempt = 0;\n\n    // The timeout's ID which is used to delay the next retry\n    this._retryTimeout = null;\n\n    // The offset of the remote upload before the latest attempt was started.\n    this._offsetBeforeRetry = 0;\n  }\n\n  start() {\n    let file = this.file;\n\n    if (!file) {\n      this._emitError(new Error(\"tus: no file or stream to upload provided\"));\n      return;\n    }\n\n    if (!this.options.wsendpoint) {\n      this._emitError(new Error(\"tus: no wsendpoint provided\"));\n      return;\n    }\n\n    if (!this.options.endpoint) {\n      this._emitError(new Error(\"tus: no endpoint provided\"));\n      return;\n    }\n\n    let source = this._source = getSource(file, this.options.chunkSize);\n\n    // Firstly, check if the caller has supplied a manual upload size or else\n    // we will use the calculated size by the source object.\n    if (this.options.uploadSize != null) {\n      let size = +this.options.uploadSize;\n      if (isNaN(size)) {\n        throw new Error(\"tus: cannot convert `uploadSize` option into a number\");\n      }\n\n      this._size = size;\n    } else {\n      let size = source.size;\n\n      // The size property will be null if we cannot calculate the file's size,\n      // for example if you handle a stream.\n      if (size == null) {\n        throw new Error(\"tus: cannot automatically derive upload's size from input and must be specified manually using the `uploadSize` option\");\n      }\n\n      this._size = size;\n    }\n\n    let retryDelays = this.options.retryDelays;\n    if (retryDelays != null) {\n      if (Object.prototype.toString.call(retryDelays) !== \"[object Array]\") {\n        throw new Error(\"tus: the `retryDelays` option must either be an array or null\");\n      } else {\n        let errorCallback = this.options.onError;\n        this.options.onError = (err) => {\n          // Restore the original error callback which may have been set.\n          this.options.onError = errorCallback;\n\n          // We will reset the attempt counter if\n          // - we were already able to connect to the server (offset != null) and\n          // - we were able to upload a small chunk of data to the server\n          let shouldResetDelays = this._offset != null && (this._offset > this._offsetBeforeRetry);\n          if (shouldResetDelays) {\n            this._retryAttempt = 0;\n          }\n\n          let isOnline = true;\n          if (typeof window !== \"undefined\" &&\n             \"navigator\" in window &&\n             window.navigator.onLine === false) {\n               isOnline = false;\n             }\n\n          // We only attempt a retry if\n          // - we didn't exceed the maxium number of retries, yet, and\n          // - this error was caused by a request or it's response and\n          // - the error is not a client error (status 4xx) and\n          // - the browser does not indicate that we are offline\n          let shouldRetry = this._retryAttempt < retryDelays.length &&\n                            err.originalRequest != null &&\n                            !inStatusCategory(err.originalRequest.status, 400) &&\n                            isOnline;\n\n          if (!shouldRetry) {\n            this._emitError(err);\n            return;\n          }\n\n          let delay = retryDelays[this._retryAttempt++];\n\n          this._offsetBeforeRetry = this._offset;\n          this.options.uploadUrl = this.url;\n\n          this._retryTimeout = setTimeout(() => {\n            this.start();\n          }, delay);\n        };\n      }\n    }\n\n    // Reset the aborted flag when the upload is started or else the\n    // _startUpload will stop before sending a request if the upload has been\n    // aborted previously.\n    this._aborted = false;\n\n    // The upload had been started previously and we should reuse this URL.\n    if (this.url != null) {\n      this._resumeUpload();\n      return;\n    }\n\n    // A URL has manually been specified, so we try to resume\n    if (this.options.uploadUrl != null) {\n        this.url = this.options.uploadUrl;\n        this._resumeUpload();\n        return;\n    }\n\n    // Try to find the endpoint for the file in the storage\n    if (this.options.resume) {\n        this._fingerprint = this.options.fingerprint(file);\n        let resumedUrl = Storage.getItem(this._fingerprint);\n\n        if (resumedUrl != null) {\n            this.url = resumedUrl;\n            this._resumeUpload();\n            return;\n        }\n    }\n\n    // An upload has not started for the file yet, so we start a new one\n    this._createUpload();\n  }\n\n  abort() {\n    if (this._xhr !== null) {\n      this._xhr.abort();\n      this._source.close();\n      this._aborted = true;\n    }\n\n    if (this._retryTimeout != null) {\n      clearTimeout(this._retryTimeout);\n      this._retryTimeout = null;\n    }\n  }\n\n  cancel() {\n    if (this._xhr != null && this._aborted == false) {\n      this._xhr.onabort = () => {\n        this._cancelUpload();\n      };\n      this.abort();\n    } else {\n      this._cancelUpload();\n    }\n  }\n\n  /**\n  * Cancel upload using the delete extension by sending a DELETE\n  * request to the uploadUrl.\n  *\n  * @api private\n  */\n  _cancelUpload() {\n    let xhr = newRequest();\n    xhr.open(\"DELETE\", this.url, true);\n\n    xhr.onload = () => {\n      if (!inStatusCategory(xhr.status, 200)) {\n        if (xhr.status === 423) {\n          this._cancelUpload();\n          return;\n        }\n        if (inStatusCategory(xhr.status, 400)) {\n          Storage.removeItem(this._fingerprint);\n          this._emitCancelSuccess();\n          return;\n        }\n      }\n      Storage.removeItem(this._fingerprint);\n      this._emitCancelSuccess();\n      return;\n    };\n\n    xhr.onerror = (err) => {\n      this._emitXhrCancelError(xhr, new Error(\"tus: failed to cancel upload\"), err);\n    };\n\n    this._setupXHR(xhr);\n    xhr.send(null);\n  }\n\n  _emitXhrCancelError(xhr, err, causingErr) {\n    this._emitCancelError(new DetailedError(err, causingErr, xhr));\n  }\n\n  _emitCancelError(err) {\n    if (typeof this.options.onError === \"function\") {\n      this.options.onCancelError(err);\n    } else {\n      throw err;\n    }\n  }\n\n  _emitCancelSuccess() {\n    if (typeof this.options.onCancelSuccess === \"function\") {\n      this.options.onCancelSuccess();\n    }\n  }\n\n  _emitXhrError(xhr, err, causingErr) {\n    this._emitError(new DetailedError(err, causingErr, xhr));\n  }\n\n  _emitError(err) {\n    if (typeof this.options.onError === \"function\") {\n      this.options.onError(err);\n    } else {\n      throw err;\n    }\n  }\n\n  _emitSuccess() {\n    if (typeof this.options.onSuccess === \"function\") {\n      this.options.onSuccess();\n    }\n  }\n\n  /**\n   * Publishes notification when data has been sent to the server. This\n   * data may not have been accepted by the server yet.\n   * @param  {number} bytesSent  Number of bytes sent to the server.\n   * @param  {number} bytesTotal Total number of bytes to be sent to the server.\n   */\n  _emitProgress(bytesSent, bytesTotal) {\n    if (typeof this.options.onProgress === \"function\") {\n      this.options.onProgress(bytesSent, bytesTotal);\n    }\n  }\n\n  /**\n   * Publishes notification when a chunk of data has been sent to the server\n   * and accepted by the server.\n   * @param  {number} chunkSize  Size of the chunk that was accepted by the\n   *                             server.\n   * @param  {number} bytesAccepted Total number of bytes that have been\n   *                                accepted by the server.\n   * @param  {number} bytesTotal Total number of bytes to be sent to the server.\n   */\n  _emitChunkComplete(chunkSize, bytesAccepted, bytesTotal) {\n    if (typeof this.options.onChunkComplete === \"function\") {\n      this.options.onChunkComplete(chunkSize, bytesAccepted, bytesTotal);\n    }\n  }\n\n  /**\n   * Set the headers used in the request and the withCredentials property\n   * as defined in the options\n   *\n   * @param {XMLHttpRequest} xhr\n   */\n  _setupXHR(xhr) {\n    this._xhr = xhr;\n\n    xhr.setRequestHeader(\"Tus-Resumable\", \"1.0.0\");\n    let headers = this.options.headers;\n\n    for (let name in headers) {\n      xhr.setRequestHeader(name, headers[name]);\n    }\n\n    xhr.withCredentials = this.options.withCredentials;\n  }\n\n  _setupXHR(xhr) {\n    this._xhr = xhr;\n\n    xhr.setRequestHeader(\"Tus-Resumable\", \"1.0.0\");\n    let headers = this.options.headers;\n\n    for (let name in headers) {\n      xhr.setRequestHeader(name, headers[name]);\n    }\n\n    xhr.withCredentials = this.options.withCredentials;\n  }\n\n  /**\n   * Create a new upload using the creation extension by sending a POST\n   * request to the endpoint. After successful creation the file will be\n   * uploaded\n   *\n   * @api private\n   */\n  _createUpload() {\n    let ws = new WebSocket(\"ws://\"+this.options.wsendpoint+\"/ws\");\n\n    ws.onopen = () => {\n\n      let payload = {\n        method: \"POST\",\n        headers: {}\n      };\n\n      let headers = {\n        \"Tus-Resumable\": \"1.0.0\",\n        \"Upload-Length\": this._size.toString()\n      };\n\n      var metadata = encodeMetadata(this.options.metadata);\n      if (metadata !== \"\") {\n        headers[\"Upload-Metadata\"] = metadata;\n      }\n\n      let optionHeaders = this.options.headers;\n      for (let name in optionHeaders) {\n        headers[name] = optionHeaders[name];\n      }\n\n      payload.headers = headers;\n\n      ws.send(JSON.stringify(payload));\n    };\n\n    ws.onerror = (event) => {\n      console.log(\"[WS Error]\", event);\n      // MUST _emitXhrError (_emitWsError)\n      this._emitError(new Error(\"tus: failed to create upload\"));\n    };\n\n    ws.onclose = (event) => {\n      console.log(\"[WS Closeddddd]\", event);\n      \n      if (event.code != 1000) {\n        // MUST _emitXhrError (_emitWsError)\n        this._emitError(new Error(\"tus: closed to create upload\"));\n      }\n      \n    };\n\n    ws.onmessage = (message) => {\n      let response = JSON.parse(message.data);\n\n      if (!inStatusCategory(response.status, 200)) {\n        // MUST _emitXhrError (_emitWsError)\n        this._emitError(new Error(\"tus: unexpected response while creating upload\"));\n        return;\n      }\n\n      this.url = this.options.endpoint + response.headers[\"Location\"];\n\n      if (this.options.resume) {\n        Storage.setItem(this._fingerprint, this.url);\n      }\n\n      this._offset = 0;\n      ws.close(1000);\n      this._startUpload();\n    };\n  }\n\n  /*\n   * Try to resume an existing upload. First a HEAD request will be sent\n   * to retrieve the offset. If the request fails a new upload will be\n   * created. In the case of a successful response the file will be uploaded.\n   *\n   * @api private\n   */\n  _resumeUpload() {\n    let xhr = newRequest();\n    xhr.open(\"HEAD\", this.url, true);\n\n    xhr.onload = () => {\n      if (!inStatusCategory(xhr.status, 200)) {\n        if (this.options.resume && inStatusCategory(xhr.status, 400)) {\n          // Remove stored fingerprint and corresponding endpoint,\n          // on client errors since the file can not be found\n          Storage.removeItem(this._fingerprint);\n        }\n\n        // If the upload is locked (indicated by the 423 Locked status code), we\n        // emit an error instead of directly starting a new upload. This way the\n        // retry logic can catch the error and will retry the upload. An upload\n        // is usually locked for a short period of time and will be available\n        // afterwards.\n        if (xhr.status === 423) {\n          this._emitXhrError(xhr, new Error(\"tus: upload is currently locked; retry later\"));\n          return;\n        }\n\n        // Try to create a new upload\n        this.url = null;\n        this._createUpload();\n        return;\n      }\n\n      let offset = parseInt(xhr.getResponseHeader(\"Upload-Offset\"), 10);\n      if (isNaN(offset)) {\n        this._emitXhrError(xhr, new Error(\"tus: invalid or missing offset value\"));\n        return;\n      }\n\n      let length = parseInt(xhr.getResponseHeader(\"Upload-Length\"), 10);\n      if (isNaN(length)) {\n        this._emitXhrError(xhr, new Error(\"tus: invalid or missing length value\"));\n        return;\n      }\n\n      // Upload has already been completed and we do not need to send additional\n      // data to the server\n      if (offset === length) {\n        this._emitProgress(length, length);\n        this._emitSuccess();\n        return;\n      }\n\n      this._offset = offset;\n      this._startUpload();\n    };\n\n    xhr.onerror = (err) => {\n      this._emitXhrError(xhr, new Error(\"tus: failed to resume upload\"), err);\n    };\n\n    this._setupXHR(xhr);\n    xhr.send(null);\n  }\n\n  /**\n   * Start uploading the file using PATCH requests. The file will be divided\n   * into chunks as specified in the chunkSize option. During the upload\n   * the onProgress event handler may be invoked multiple times.\n   *\n   * @api private\n   */\n  _startUpload() {\n    // If the upload has been aborted, we will not send the next PATCH request.\n    // This is important if the abort method was called during a callback, such\n    // as onChunkComplete or onProgress.\n    if (this._aborted) {\n      return;\n    }\n\n    let xhr = newRequest();\n\n    // Some browser and servers may not support the PATCH method. For those\n    // cases, you can tell tus-js-client to use a POST request with the\n    // X-HTTP-Method-Override header for simulating a PATCH request.\n    if (this.options.overridePatchMethod) {\n      xhr.open(\"POST\", this.url, true);\n      xhr.setRequestHeader(\"X-HTTP-Method-Override\", \"PATCH\");\n    } else {\n      xhr.open(\"PATCH\", this.url, true);\n    }\n\n    xhr.onload = () => {\n      if (!inStatusCategory(xhr.status, 200)) {\n        this._emitXhrError(xhr, new Error(\"tus: unexpected response while uploading chunk\"));\n        return;\n      }\n\n      let offset = parseInt(xhr.getResponseHeader(\"Upload-Offset\"), 10);\n      if (isNaN(offset)) {\n        this._emitXhrError(xhr, new Error(\"tus: invalid or missing offset value\"));\n        return;\n      }\n\n      this._emitProgress(offset, this._size);\n      this._emitChunkComplete(offset - this._offset, offset, this._size);\n\n      this._offset = offset;\n\n      if (offset == this._size) {\n        // Yay, finally done :)\n        this._emitSuccess();\n        this._source.close();\n        return;\n      }\n\n      this._startUpload();\n    };\n\n    xhr.onerror = (err) => {\n      // Don't emit an error if the upload was aborted manually\n      if (this._aborted) {\n        return;\n      }\n\n      this._emitXhrError(xhr, new Error(\"tus: failed to upload chunk at offset \" + this._offset), err);\n    };\n\n    // Test support for progress events before attaching an event listener\n    if (\"upload\" in xhr) {\n      xhr.upload.onprogress = (e) => {\n        if (!e.lengthComputable) {\n          return;\n        }\n\n        this._emitProgress(start + e.loaded, this._size);\n      };\n    }\n\n    this._setupXHR(xhr);\n\n    xhr.setRequestHeader(\"Upload-Offset\", this._offset);\n    xhr.setRequestHeader(\"Content-Type\", \"application/offset+octet-stream\");\n\n    let start = this._offset;\n    let end = this._offset + this.options.chunkSize;\n\n    // The specified chunkSize may be Infinity or the calcluated end position\n    // may exceed the file's size. In both cases, we limit the end position to\n    // the input's total size for simpler calculations and correctness.\n    if (end === Infinity || end > this._size) {\n      end = this._size;\n    }\n\n    xhr.send(this._source.slice(start, end));\n  }\n}\n\nfunction encodeMetadata(metadata) {\n    if (!Base64.isSupported) {\n        return \"\";\n    }\n\n    var encoded = [];\n\n    for (var key in metadata) {\n        encoded.push(key + \" \" + Base64.encode(metadata[key]));\n    }\n\n    return encoded.join(\",\");\n}\n\n/**\n * Checks whether a given status is in the range of the expected category.\n * For example, only a status between 200 and 299 will satisfy the category 200.\n *\n * @api private\n */\nfunction inStatusCategory(status, category) {\n  return (status >= category && status < (category + 100));\n}\n\nUpload.defaultOptions = defaultOptions;\n\nexport default Upload;\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = target[name];\n\t\t\t\tcopy = options[name];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n"]}